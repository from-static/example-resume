name: static-version-watch
on:
  workflow_call:
  workflow_dispatch:
      
permissions:
  contents: read
  pull-requests	: write
  issues: write
  id-token: write

jobs:
  static-version-watch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Parse static.json + Update _static.version
        id: static
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const path = require("path");
            const staticConfigAsString = fs.readFileSync("./static.json", "utf8");
            const staticConfig = JSON.parse(staticConfigAsString);
            const {
              generator,
              version
            } = staticConfig._static;
            // If there isn't a version, the respository is always using the default branch
            if (!version) {
              console.log("No version found in static.json");
              return;
            };
            let nextVersion = null;
            try {
              nextVersion = parseInt(version.split(".")[0].replace(/(\"version\"\w*:\w*\"v1\"/), "")) + 1;
            } catch (e) {
              console.log("Error parsing version", e);
              return;
            }
            const [owner, repo] = generator.split("/");
            const branch = `v${nextVersion}`;
            try {
              const response = await github.rest.repos.getBranch({
                owner,
                repo,
                branch
              });
            } catch (e) {
              console.log(`Error fetching next version (${branch}), it might not be published yet!`);
              return;
            }
            console.log(`Attempting to open a Pull Request to suggest updating to ${branch}`);
            const updatedStaticConfig = staticConfigAsString.replace(/(\"version\"\w*:\w*)\"v1\"/, `$1"${branch}"`));
            fs.writeFileSync("./static.json", updatedStaticConfig);
            return JSON.parse(updatedStaticConfig);
      - name: Check for Changes
        run: |
          if git diff --raw --exit-code; then
            echo "changes_exist=false" >> "$GITHUB_ENV"
          else
            echo "changes_exist=true" >> "$GITHUB_ENV"
          fi
      - name: Commit Changes
        if: ${{ env.changes_exist == 'true' }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b static-generator-${{ fromJson(steps.static.outputs.result)._static.version }}
          git add .
          git commit -m "chore: updates ${{ fromJson(steps.static.outputs.result)._static.generator }} to ${{ fromJson(steps.static.outputs.result)._static.version }}"
          git push --set-upstream origin static-generator-${{ fromJson(steps.static.outputs.result)._static.version }}
      - name: Open (Draft) Pull Request
        if: ${{ env.changes_exist == 'true' }}
        uses: actions/github-script@v7
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: 'chore: updates ${{ fromJson(steps.static.outputs.result)._static.generator }} to ${{ fromJson(steps.static.outputs.result)._static.version }}',
              owner,
              repo,
              head: 'static-generator-${{ fromJson(steps.static.outputs.result)._static.version }}',
              base: '',
              body: [
                'This PR was auto-generated by the `static-version-watch` workflow.',
                '### Continuous integration workflows were NOT run on the creation of this pull request.',
                '---',
                '- [ ] Close and reopen this pull request to trigger workflows.',
              ].join('\n'),
              draft: true
            });